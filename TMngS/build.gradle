/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */
buildscript {
  repositories {
      mavenCentral()
  }
  dependencies {
      classpath 'org.postgresql:postgresql:42.1.4'
  }
}

plugins {
  // Apply the java-library plugin to add support for Java Library
  id 'java-library'
  id 'eclipse'

  // Lombok
  id 'io.freefair.lombok' version '5.2.1'

  // Doma
  id 'com.diffplug.eclipse.apt' version '3.25.0'
  id 'org.seasar.doma.compile' version '1.1.0'

  // Doma-codegen
  id 'org.seasar.doma.codegen' version '1.2.1'
}

repositories {
  jcenter()
}

dependencies {
  // Doma
  implementation "org.seasar.doma:doma-core:2.44.0"
  annotationProcessor "org.seasar.doma:doma-processor:2.44.0"

  // postgres
  implementation 'org.postgresql:postgresql:42.1.4'

  // JUnit 5
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

  // DBUnit
  testImplementation 'org.dbunit:dbunit:2.7.0'
}

test {
  useJUnitPlatform()
}

// Doma
def domaResources = ['doma.compile.config', 'META-INF/**/*.sql', 'META-INF/**/*.script']

task copyDomaResourcesJava(type: Copy) {
  from sourceSets.main.resources.srcDirs
  into compileJava.destinationDir
  include domaResources
}

compileJava {
  options.deprecation = true
  options.encoding = 'UTF-8'
  dependsOn copyDomaResourcesJava
}

processResources {
  exclude domaResources
}

// doma codegen plugin
domaCodeGen {
  tmngs {
    url = 'jdbc:postgresql://127.0.0.1:5432/tmngs'
    user = 'tmngs'
    password = 'tmngs'
    schemaName = 'tmngs'
    sourceDir = file("$projectDir/doma/src/main/java")
    resourceDir = file("$projectDir/doma/src/main/resources")
    testSourceDir = file("$projectDir/doma/src/test/java")
    templateDir = file("$projectDir/doma/ftl")
    entity {
      useMappedSuperclass = false
      packageName = 'tmngs.db.entity'
    }
    dao {
      packageName = 'tmngs.db.dao'
    }
  }
}

// eclipse
eclipse {
  classpath {
    file {
      whenMerged { classpath ->
        classpath.entries.removeAll { it.path == '.apt_generated' }
      }
      withXml { provider ->
        def node = provider.asNode()
        // specify output path for .apt_generated
        node.appendNode( 'classpathentry', [ kind: 'src', output: 'bin/main', path: '.apt_generated'])
      }
    }
  }
}
